{"ast":null,"code":"var _jsxFileName = \"C:\\\\SS\\\\portofolio-dani-main\\\\src\\\\components\\\\work\\\\Works.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { projectsData } from './Data';\nimport { projectsNav } from './Data';\nimport Workitems from './Workitems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Works = () => {\n  _s();\n\n  const [item, setItem] = useState({\n    name: 'all'\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent\n    });\n    setActive(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work_filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? 'active-work' : ''} work_item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(Workitems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Works, \"b2lwtOXtOdkVCpzpS1QcGJopY6g=\");\n\n_c = Works;\nexport default Works;\n\nvar _c;\n\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useEffect","useState","projectsData","projectsNav","Workitems","Works","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","handleClick","e","index","target","textContent","map","id"],"sources":["C:/SS/portofolio-dani-main/src/components/work/Works.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { projectsData } from './Data'\nimport { projectsNav } from './Data'\nimport Workitems from './Workitems'\n\nconst Works = () => {\n    const [item, setItem] = useState({ name: 'all' });\n    const [projects, setProjects] = useState([]);\n    const [active, setActive] = useState(0);\n\n    useEffect(() => {\n        if (item.name === \"all\") {\n            setProjects(projectsData);\n        }\n        else {\n            const newProjects = projectsData.filter((project) => {\n                return project.category === item.name;\n            });\n            setProjects(newProjects);\n        }\n    }, [item]);\n\n    const handleClick = (e, index) => {\n        setItem({ name: e.target.textContent });\n        setActive(index);\n    };\n    return (\n        <div>\n            <div className=\"work_filters\">\n                {projectsNav.map((item, index) => {\n                    return (<span\n                        onClick={(e) => {\n                            handleClick(e, index);\n                        }}\n                        className={`${active === index ? 'active-work' : ''} work_item`}\n                        key={index}>\n                        {item.name}</span>);\n                })}\n            </div>\n\n            <div className=\"work__container container grid\">\n                {projects.map((item) => {\n                    return <Workitems item={item} key={item.id} />\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Works"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAAEO,IAAI,EAAE;EAAR,CAAD,CAAhC;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,CAAD,CAApC;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIM,IAAI,CAACE,IAAL,KAAc,KAAlB,EAAyB;MACrBE,WAAW,CAACR,YAAD,CAAX;IACH,CAFD,MAGK;MACD,MAAMW,WAAW,GAAGX,YAAY,CAACY,MAAb,CAAqBC,OAAD,IAAa;QACjD,OAAOA,OAAO,CAACC,QAAR,KAAqBV,IAAI,CAACE,IAAjC;MACH,CAFmB,CAApB;MAGAE,WAAW,CAACG,WAAD,CAAX;IACH;EACJ,CAVQ,EAUN,CAACP,IAAD,CAVM,CAAT;;EAYA,MAAMW,WAAW,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;IAC9BZ,OAAO,CAAC;MAAEC,IAAI,EAAEU,CAAC,CAACE,MAAF,CAASC;IAAjB,CAAD,CAAP;IACAT,SAAS,CAACO,KAAD,CAAT;EACH,CAHD;;EAIA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,UACKhB,WAAW,CAACmB,GAAZ,CAAgB,CAAChB,IAAD,EAAOa,KAAP,KAAiB;QAC9B,oBAAQ;UACJ,OAAO,EAAGD,CAAD,IAAO;YACZD,WAAW,CAACC,CAAD,EAAIC,KAAJ,CAAX;UACH,CAHG;UAIJ,SAAS,EAAG,GAAER,MAAM,KAAKQ,KAAX,GAAmB,aAAnB,GAAmC,EAAG,YAJhD;UAAA,UAMHb,IAAI,CAACE;QANF,GAKCW,KALD;UAAA;UAAA;UAAA;QAAA,QAAR;MAOH,CARA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAaI;MAAK,SAAS,EAAC,gCAAf;MAAA,UACKV,QAAQ,CAACa,GAAT,CAAchB,IAAD,IAAU;QACpB,oBAAO,QAAC,SAAD;UAAW,IAAI,EAAEA;QAAjB,GAA4BA,IAAI,CAACiB,EAAjC;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CA1CD;;GAAMlB,K;;KAAAA,K;AA4CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}